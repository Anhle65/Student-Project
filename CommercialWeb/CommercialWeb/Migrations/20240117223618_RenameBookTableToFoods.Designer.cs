// <auto-generated />
using System;
using CommercialWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommercialWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240117223618_RenameBookTableToFoods")]
    partial class RenameBookTableToFoods
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommercialWeb.Models.Categories", b =>
                {
                    b.Property<byte>("CategoryId")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = (byte)1,
                            CategoryName = "Food"
                        },
                        new
                        {
                            CategoryId = (byte)2,
                            CategoryName = "Book"
                        },
                        new
                        {
                            CategoryId = (byte)3,
                            CategoryName = "Furniture"
                        });
                });

            modelBuilder.Entity("CommercialWeb.Models.Foods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("CommercialWeb.Models.Information", b =>
                {
                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BestBefore")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductType");

                    b.HasIndex("FoodId")
                        .IsUnique();

                    b.ToTable("Information");
                });

            modelBuilder.Entity("CommercialWeb.Models.Information", b =>
                {
                    b.HasOne("CommercialWeb.Models.Foods", "Foods")
                        .WithOne("Information")
                        .HasForeignKey("CommercialWeb.Models.Information", "FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Foods");
                });

            modelBuilder.Entity("CommercialWeb.Models.Foods", b =>
                {
                    b.Navigation("Information")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
